sheetIndex = 2,
check.names=F))
colnames
htcb.ind = which(col.names=='HTCH/WOODhrd')
col.names <- names(read.xlsx(file.path(intake.folder, myfiles[i]),
sheetIndex = 2,
check.names=F))
htcb.ind = which(col.names=='HTCH/WOODhrd')
htcb.ind
col.names
htcb.ind = which(col.names=='HTCB/WOODhrd')
htcb.ind
ht.ind = which(col.names=='HEIGHT')
ht.ind
names(cells)
names(sheets.list.output)
names(sheets.list.output) <- sheet.names
sheets.list.output
myfiles
output.folder <- dir.create(file.path(base.path,"AMEX Dropbox/Data/Plot Data/Raw/Grouse/HTCB_fixed"))
output.folder
dir.create(output.folder)
output.folder <- file.path(base.path,"AMEX Dropbox/Data/Plot Data/Raw/Grouse/HTCB_fixed")
dir.create(output.folder)
output.folder
lapply(seq_along(sheets.list.output), FUN = function(j){
write.xlsx(x = sheets.list.output[j],
file = file.path(output.folder, myfiles[i])
sheetName = sheet.names[j],
check.names=F)
})
seq_along(sheets.list.output)
i
myfiles[i]
lapply(seq_along(sheets.list.output), FUN = function(j){
write.xlsx(x = sheets.list.output[j],
file = file.path(output.folder, myfiles[i]),
sheetName = sheet.names[j],
check.names=F)
})
j=1
sheets.list.output[j]
sheet.names[j]
write.xlsx(x = sheets.list.output[j],
file = file.path(output.folder, myfiles[i]),
sheetName = sheet.names[j],
check.names=F)
lapply(seq_along(sheets.list.output), FUN = function(j){
write.xlsx(x = sheets.list.output[j],
file = file.path(output.folder, myfiles[i]),
sheetName = sheet.names[j])
})
lapply(seq_along(sheets.list.output), FUN = function(j){
write.xlsx(x = sheets.list.output[j],
file = file.path(output.folder, myfiles[i]),
append = T,
row.names = F,
col.names = F,
sheetName = sheet.names[j])
})
View(sheets.list.output$`Plot Data`)
lapply(seq_along(sheets.list.output), FUN = function(j){
write.xlsx(x = sheets.list.output[j],
file = file.path(output.folder, myfiles[i]),
append = T,
row.names = F,
as.data.frame=F,
showNA = F,
sheetName = sheet.names[j])
})
lapply(seq_along(sheets.list.output), FUN = function(j){
write.xlsx(x = sheets.list.output[j],
file = file.path(output.folder, myfiles[i]),
append = T,
row.names = F,
as.data.frame=F,
showNA = F,
sheetName = sheet.names[j])
})
lapply(seq_along(sheets.list.output), FUN = function(j){
write.xlsx(x = sheets.list.output[j],
file = file.path(output.folder, myfiles[i]),
append = T,
row.names = F,
showNA = F,
sheetName = sheet.names[j])
})
View(sheets.list.output$Regen)
class(sheets.list.output$`Plot Data`)
library(readxl)
new.wb <- openxlsx::createWorkbook()
}
lapply(seq_along(sheets.list.output), FUN = function(j){
openxlsx::addWorksheet(new.wb, sheetName = sheet.names[j])
})
new.wb[[1]]
openxlsx::saveWorkbook(new.wb, file = file.path(output.folder, myfiles[i]))
myfile.basename <- str_extract(myfiles[i], "[^.xls]+")
myfile.basename
openxlsx::saveWorkbook(new.wb, file = file.path(output.folder, myfiles[i]))
openxlsx::saveWorkbook(new.wb, file = file.path(output.folder, myfile.basename))
openxlsx::saveWorkbook(new.wb, file = file.path(output.folder, myfile.basename, ".xlsx"))
file.path(output.folder, myfile.basename, ".xlsx")
new.filename <- paste0(myfile.basename, ".xlsx")
new.filename
openxlsx::saveWorkbook(new.wb, file = file.path(output.folder, new.filename))
new.wb <- openxlsx::createWorkbook()
lapply(seq_along(sheets.list.output), FUN = function(j){
openxlsx::addWorksheet(new.wb, sheetName = sheet.names[j])
openxlsx::writeData(new.wb,
sheet = sheet.names[j],
x = sheets.list.output[j])
})
new.wb
myfile.basename <- str_extract(myfiles[i], "[^.xls]+")
new.filename <- paste0(myfile.basename, ".xlsx")
openxlsx::saveWorkbook(new.wb, file = file.path(output.folder, new.filename))
sheets.list.output
new.wb <- openxlsx::createWorkbook()
lapply(seq_along(sheets.list.output), FUN = function(j){
openxlsx::addWorksheet(new.wb, sheetName = sheet.names[j])
openxlsx::writeData(new.wb,
sheet = sheet.names[j],
colNames = T,
x = sheets.list.output[j])
})
myfile.basename <- str_extract(myfiles[i], "[^.xls]+")
new.filename <- paste0(myfile.basename, ".xlsx")
openxlsx::saveWorkbook(new.wb, file = file.path(output.folder, new.filename))
openxlsx::saveWorkbook(new.wb, file = file.path(output.folder, new.filename))
new.wb <- openxlsx::createWorkbook()
lapply(seq_along(sheets.list.output), FUN = function(j){
openxlsx::addWorksheet(new.wb, sheetName = sheet.names[j])
openxlsx::writeData(new.wb,
sheet = sheet.names[j],
colNames = T,
x = sheets.list.output[j])
})
myfile.basename <- str_extract(myfiles[i], "[^.xls]+")
new.filename <- paste0(myfile.basename, ".xlsx")
openxlsx::saveWorkbook(new.wb, file = file.path(output.folder, new.filename))
file.path(output.folder, new.filename)
new.filename
new.wb <- openxlsx::createWorkbook()
lapply(seq_along(sheets.list.output), FUN = function(j){
openxlsx::addWorksheet(new.wb, sheetName = sheet.names[j])
openxlsx::writeData(new.wb,
sheet = sheet.names[j],
colNames = T,
x = sheets.list.output[j])
})
myfile.basename <- str_extract(myfiles[i], "[^.xls]+")
new.filename <- paste0(myfile.basename, ".xlsx")
openxlsx::saveWorkbook(new.wb, file = file.path(output.folder, new.filename))
openxlsx::saveWorkbook(new.wb, file = file.path(output.folder, new.filename),
overwrite = T)
trees.raw <- read.xlsx(file.path(intake.folder, myfiles[i]),
sheetName = 'Trees',
check.names=F)
trees <- trees.raw %>%
mutate(`HTCB/WOODhrd`= HEIGHT - `HTCB/WOODhrd`)
sheet.names <- names(getSheets(wb))
sheets.list.intake <- lapply(sheet.names, FUN = function(x) {
read.xlsx(file.path(intake.folder, myfiles[i]),
sheetName = x,
check.names=F)
})
#
sheets.list.output <- sheets.list.intake
#replace the second sheet with our new 'trees' dataframe
sheets.list.output[[2]] <- trees
names(sheets.list.output) <- sheet.names
lapply(seq_along(sheets.list.output), FUN = function(j){
openxlsx::write.xlsx(x = sheets.list.output[j],
file = file.path(output.folder, new.filename),
append = T,
row.names = F,
keepNA = F,
sheetName = sheet.names[j])
})
lapply(seq_along(sheets.list.output), FUN = function(j){
openxlsx::write.xlsx(x = sheets.list.output[j],
file = file.path(output.folder, new.filename),
overwrite = F,
row.names = F,
keepNA = F,
sheetName = sheet.names[j])
})
library(openxlsx)
# lapply(seq_along(sheets.list.output), FUN = function(j){
#   # openxlsx::write.xlsx(x = sheets.list.output[j],
#   #            file = file.path(output.folder, new.filename),
#   #            overwrite = F,
#   #            row.names = F,
#   #            keepNA = F,
#   #            sheetName = sheet.names[j])
#
# })
new.wb <- openxlsx::buildWorkbook(sheets.list.output)
saveWorkbook(new.wb,
file = file.path(output.folder, new.filename),
overwrite = T)
# Open and manipulate files ---------------------------------------------------
for(i in 1:length(myfiles)){
# wb <- loadWorkbook(file.path(intake.folder, myfiles[i]))
# wb_sheets <- getSheets(wb)
# trees <- wb_sheets[['Trees']]
# rows <- getRows(trees)
# cells <- getCells(rows)
# col.names <- names(read.xlsx(file.path(intake.folder, myfiles[i]),
#                             sheetIndex = 2,
#                             check.names=F))
# htcb.ind = which(col.names=='HTCB/WOODhrd')
# ht.ind = which(col.names=='HEIGHT')
#now build the indices of cells that we want to edit. format is "row.column"
#ultimately, we need to replace the value in the HTCB column with X.ht.ind - X.htcb.ind
trees.raw <- read.xlsx(file.path(intake.folder, myfiles[i]),
sheetName = 'Trees',
check.names=F)
trees <- trees.raw %>%
mutate(`HTCB/WOODhrd`= HEIGHT - `HTCB/WOODhrd`)
sheet.names <- names(getSheets(wb))
sheets.list.intake <- lapply(sheet.names, FUN = function(x) {
read.xlsx(file.path(intake.folder, myfiles[i]),
sheetName = x,
check.names=F)
})
#
sheets.list.output <- sheets.list.intake
#replace the second sheet with our new 'trees' dataframe
sheets.list.output[[2]] <- trees
names(sheets.list.output) <- sheet.names
myfile.basename <- str_extract(myfiles[i], "[^.xls]+")
new.filename <- paste0(myfile.basename, ".xlsx")
# build a 'workbook' object with each element of 'sheets.list.output' as a separate sheet
new.wb <- openxlsx::buildWorkbook(sheets.list.output,
keepNA = F)
#save this 'workbook' object to a new .xlsx file
saveWorkbook(new.wb,
file = file.path(output.folder, new.filename),
overwrite = T)
}
# Load Packages ####
library(tidyverse)
library(xlsx)
library(readxl)
# define "base" path based on computer
base.path <- "C:/Users/bryan"
#create file path for intake files
intake.folder <- file.path(base.path, "AMEX Dropbox/Data/Plot Data/Raw/Grouse/HTCB_to_fix")
#list files in the folder
myfiles <- list.files(intake.folder)
#create file path for a new folder to put the new files
output.folder <- file.path(base.path,"AMEX Dropbox/Data/Plot Data/Raw/Grouse/HTCB_fixed")
#create new empty folder
dir.create(output.folder)
# Open and manipulate files ---------------------------------------------------
for(i in 1:length(myfiles)){
# wb <- loadWorkbook(file.path(intake.folder, myfiles[i]))
# wb_sheets <- getSheets(wb)
# trees <- wb_sheets[['Trees']]
# rows <- getRows(trees)
# cells <- getCells(rows)
# col.names <- names(read.xlsx(file.path(intake.folder, myfiles[i]),
#                             sheetIndex = 2,
#                             check.names=F))
# htcb.ind = which(col.names=='HTCB/WOODhrd')
# ht.ind = which(col.names=='HEIGHT')
#now build the indices of cells that we want to edit. format is "row.column"
#ultimately, we need to replace the value in the HTCB column with X.ht.ind - X.htcb.ind
trees.raw <- read.xlsx(file.path(intake.folder, myfiles[i]),
sheetName = 'Trees',
check.names=F)
trees <- trees.raw %>%
mutate(`HTCB/WOODhrd`= HEIGHT - `HTCB/WOODhrd`)
sheet.names <- names(getSheets(wb))
sheets.list.intake <- lapply(sheet.names, FUN = function(x) {
read.xlsx(file.path(intake.folder, myfiles[i]),
sheetName = x,
check.names=F)
})
#
sheets.list.output <- sheets.list.intake
#replace the second sheet with our new 'trees' dataframe
sheets.list.output[[2]] <- trees
names(sheets.list.output) <- sheet.names
myfile.basename <- str_extract(myfiles[i], "[^.xls]+")
new.filename <- paste0(myfile.basename, ".xlsx")
# build a 'workbook' object with each element of 'sheets.list.output' as a separate sheet
new.wb <- openxlsx::buildWorkbook(sheets.list.output,
keepNA = F)
#save this 'workbook' object to a new .xlsx file
saveWorkbook(new.wb,
file = file.path(output.folder, new.filename),
overwrite = T)
}
# Open and manipulate files ---------------------------------------------------
for(i in 1:length(myfiles)){
# wb <- loadWorkbook(file.path(intake.folder, myfiles[i]))
# wb_sheets <- getSheets(wb)
# trees <- wb_sheets[['Trees']]
# rows <- getRows(trees)
# cells <- getCells(rows)
# col.names <- names(read.xlsx(file.path(intake.folder, myfiles[i]),
#                             sheetIndex = 2,
#                             check.names=F))
# htcb.ind = which(col.names=='HTCB/WOODhrd')
# ht.ind = which(col.names=='HEIGHT')
#now build the indices of cells that we want to edit. format is "row.column"
#ultimately, we need to replace the value in the HTCB column with X.ht.ind - X.htcb.ind
trees.raw <- read.xlsx(file.path(intake.folder, myfiles[i]),
sheetName = 'Trees',
check.names=F)
trees <- trees.raw %>%
mutate(`HTCB/WOODhrd`= HEIGHT - `HTCB/WOODhrd`)
sheet.names <- names(getSheets(wb))
sheets.list.intake <- lapply(sheet.names, FUN = function(x) {
read.xlsx(file.path(intake.folder, myfiles[i]),
sheet = x,
check.names=F)
})
#
sheets.list.output <- sheets.list.intake
#replace the second sheet with our new 'trees' dataframe
sheets.list.output[[2]] <- trees
names(sheets.list.output) <- sheet.names
myfile.basename <- str_extract(myfiles[i], "[^.xls]+")
new.filename <- paste0(myfile.basename, ".xlsx")
# build a 'workbook' object with each element of 'sheets.list.output' as a separate sheet
new.wb <- openxlsx::buildWorkbook(sheets.list.output,
keepNA = F)
#save this 'workbook' object to a new .xlsx file
saveWorkbook(new.wb,
file = file.path(output.folder, new.filename),
overwrite = T)
}
trees.raw <- read.xlsx(file.path(intake.folder, myfiles[i]),
sheet = 'Trees',
check.names=F)
# Open and manipulate files ---------------------------------------------------
for(i in 1:length(myfiles)){
# wb <- loadWorkbook(file.path(intake.folder, myfiles[i]))
# wb_sheets <- getSheets(wb)
# trees <- wb_sheets[['Trees']]
# rows <- getRows(trees)
# cells <- getCells(rows)
# col.names <- names(read.xlsx(file.path(intake.folder, myfiles[i]),
#                             sheetIndex = 2,
#                             check.names=F))
# htcb.ind = which(col.names=='HTCB/WOODhrd')
# ht.ind = which(col.names=='HEIGHT')
#now build the indices of cells that we want to edit. format is "row.column"
#ultimately, we need to replace the value in the HTCB column with X.ht.ind - X.htcb.ind
trees.raw <- xlsx::read.xlsx(file.path(intake.folder, myfiles[i]),
sheetName = 'Trees',
check.names=F)
trees <- trees.raw %>%
mutate(`HTCB/WOODhrd`= HEIGHT - `HTCB/WOODhrd`)
sheet.names <- names(getSheets(wb))
sheets.list.intake <- lapply(sheet.names, FUN = function(x) {
xlsx::read.xlsx(file.path(intake.folder, myfiles[i]),
sheet = x,
check.names=F)
})
#
sheets.list.output <- sheets.list.intake
#replace the second sheet with our new 'trees' dataframe
sheets.list.output[[2]] <- trees
names(sheets.list.output) <- sheet.names
myfile.basename <- str_extract(myfiles[i], "[^.xls]+")
new.filename <- paste0(myfile.basename, ".xlsx")
# build a 'workbook' object with each element of 'sheets.list.output' as a separate sheet
new.wb <- openxlsx::buildWorkbook(sheets.list.output,
keepNA = F)
#save this 'workbook' object to a new .xlsx file
openxlsx::saveWorkbook(new.wb,
file = file.path(output.folder, new.filename),
overwrite = T)
}
# Open and manipulate files ---------------------------------------------------
for(i in 1:length(myfiles)){
wb <- xlsx::loadWorkbook(file.path(intake.folder, myfiles[i]))
# wb_sheets <- getSheets(wb)
# trees <- wb_sheets[['Trees']]
# rows <- getRows(trees)
# cells <- getCells(rows)
# col.names <- names(read.xlsx(file.path(intake.folder, myfiles[i]),
#                             sheetIndex = 2,
#                             check.names=F))
# htcb.ind = which(col.names=='HTCB/WOODhrd')
# ht.ind = which(col.names=='HEIGHT')
#now build the indices of cells that we want to edit. format is "row.column"
#ultimately, we need to replace the value in the HTCB column with X.ht.ind - X.htcb.ind
trees.raw <- xlsx::read.xlsx(file.path(intake.folder, myfiles[i]),
sheetName = 'Trees',
check.names=F)
trees <- trees.raw %>%
mutate(`HTCB/WOODhrd`= HEIGHT - `HTCB/WOODhrd`)
sheet.names <- names(getSheets(wb))
sheets.list.intake <- lapply(sheet.names, FUN = function(x) {
xlsx::read.xlsx(file.path(intake.folder, myfiles[i]),
sheet = x,
check.names=F)
})
#
sheets.list.output <- sheets.list.intake
#replace the second sheet with our new 'trees' dataframe
sheets.list.output[[2]] <- trees
names(sheets.list.output) <- sheet.names
myfile.basename <- str_extract(myfiles[i], "[^.xls]+")
new.filename <- paste0(myfile.basename, ".xlsx")
# build a 'workbook' object with each element of 'sheets.list.output' as a separate sheet
new.wb <- openxlsx::buildWorkbook(sheets.list.output,
keepNA = F)
#save this 'workbook' object to a new .xlsx file
openxlsx::saveWorkbook(new.wb,
file = file.path(output.folder, new.filename),
overwrite = T)
}
# Open and manipulate files ---------------------------------------------------
for(i in 1:length(myfiles)){
wb <- xlsx::loadWorkbook(file.path(intake.folder, myfiles[i]))
# wb_sheets <- getSheets(wb)
# trees <- wb_sheets[['Trees']]
# rows <- getRows(trees)
# cells <- getCells(rows)
# col.names <- names(read.xlsx(file.path(intake.folder, myfiles[i]),
#                             sheetIndex = 2,
#                             check.names=F))
# htcb.ind = which(col.names=='HTCB/WOODhrd')
# ht.ind = which(col.names=='HEIGHT')
#now build the indices of cells that we want to edit. format is "row.column"
#ultimately, we need to replace the value in the HTCB column with X.ht.ind - X.htcb.ind
trees.raw <- xlsx::read.xlsx(file.path(intake.folder, myfiles[i]),
sheetName = 'Trees',
check.names=F)
trees <- trees.raw %>%
mutate(`HTCB/WOODhrd`= HEIGHT - `HTCB/WOODhrd`)
sheet.names <- names(getSheets(wb))
sheets.list.intake <- lapply(sheet.names, FUN = function(x) {
xlsx::read.xlsx(file.path(intake.folder, myfiles[i]),
sheetName = x,
check.names=F)
})
#
sheets.list.output <- sheets.list.intake
#replace the second sheet with our new 'trees' dataframe
sheets.list.output[[2]] <- trees
names(sheets.list.output) <- sheet.names
myfile.basename <- str_extract(myfiles[i], "[^.xls]+")
new.filename <- paste0(myfile.basename, ".xlsx")
# build a 'workbook' object with each element of 'sheets.list.output' as a separate sheet
new.wb <- openxlsx::buildWorkbook(sheets.list.output,
keepNA = F)
#save this 'workbook' object to a new .xlsx file
openxlsx::saveWorkbook(new.wb,
file = file.path(output.folder, new.filename),
overwrite = T)
}
# Open and manipulate files ---------------------------------------------------
for(i in 1:length(myfiles)){
wb <- xlsx::loadWorkbook(file.path(intake.folder, myfiles[i]))
# wb_sheets <- getSheets(wb)
# trees <- wb_sheets[['Trees']]
# rows <- getRows(trees)
# cells <- getCells(rows)
# col.names <- names(read.xlsx(file.path(intake.folder, myfiles[i]),
#                             sheetIndex = 2,
#                             check.names=F))
# htcb.ind = which(col.names=='HTCB/WOODhrd')
# ht.ind = which(col.names=='HEIGHT')
#now build the indices of cells that we want to edit. format is "row.column"
#ultimately, we need to replace the value in the HTCB column with X.ht.ind - X.htcb.ind
trees.raw <- xlsx::read.xlsx(file.path(intake.folder, myfiles[i]),
sheetName = 'Trees',
check.names=F)
trees <- trees.raw %>%
mutate(`HTCB/WOODhrd`= HEIGHT - `HTCB/WOODhrd`)
sheet.names <- names(getSheets(wb))
sheets.list.intake <- lapply(sheet.names, FUN = function(x) {
xlsx::read.xlsx(file.path(intake.folder, myfiles[i]),
sheetName = x,
check.names=F)
})
#
sheets.list.output <- sheets.list.intake
#replace the second sheet with our new 'trees' dataframe
sheets.list.output[[2]] <- trees
names(sheets.list.output) <- sheet.names
myfile.basename <- str_extract(myfiles[i], "[^.xls]+")
new.filename <- paste0(myfile.basename, ".xlsx")
# build a 'workbook' object with each element of 'sheets.list.output' as a separate sheet
new.wb <- openxlsx::buildWorkbook(sheets.list.output,
keepNA = F)
#save this 'workbook' object to a new .xlsx file
openxlsx::saveWorkbook(new.wb,
file = file.path(output.folder, new.filename),
overwrite = T)
}
library(Rfuels)
install_github(
"SilviaTerra/rFVS"
)
install.packages('rFVS')
library(devtools)
install_github("USDAForestService/ForestVegetationSimulator-Interface/rFVS")
library(rFVS)
vignette('rFVS')
rmarkdown::clean_site(preview = FALSE)
knitr::opts_chunk$set(echo = TRUE)
plot(cars)
rmarkdown::clean_site(preview = FALSE)
